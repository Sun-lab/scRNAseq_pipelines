
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> # --------------------------------------------------------------
> # check the differential expression analysis results from MTG
> # and psychENCODE, and then use MTG results to extract genes 
> # that have cell type-specific expression
> # --------------------------------------------------------------
> 
> # --------------------------------------------------------------
> # read in results
> # --------------------------------------------------------------
> 
> genes = readRDS("../MTG/DE_gene_anno.rds")
> dim(genes)
[1] 37657    30
> genes[1:2,]
     gene entrez_id chromosome start_position end_position prop_express
1 5-HT3C2    389180          3      184076646    184084331   0.04121181
2    A1BG         1         19       58346806     58353499   0.15438279
  prop_express.Astro pvalue.Astro logFC.Astro FDR_qvalue.Astro prop_express.Exc
1        0.055749129 3.270102e-01 -0.01044745     4.632335e-01       0.03913501
2        0.003484321 4.538923e-06 -0.59555729     2.531198e-05       0.19356999
    pvalue.Exc   logFC.Exc FDR_qvalue.Exc prop_express.Inh   pvalue.Inh
1 3.529829e-01 -0.01360596   4.442193e-01       0.04479419 5.913558e-01
2 2.138587e-12  0.24276228   1.101112e-11       0.07723971 1.566159e-13
     logFC.Inh FDR_qvalue.Inh prop_express.Micro pvalue.Micro logFC.Micro
1  0.008948007   6.649788e-01         0.04838710    0.9646765 -0.01020243
2 -0.262332374   8.484677e-13         0.03225806    0.4113878 -0.22102717
  FDR_qvalue.Micro prop_express.Oligo pvalue.Oligo logFC.Oligo FDR_qvalue.Oligo
1        0.9777642         0.05483871 3.956487e-01  0.03384687     5.093617e-01
2        0.5518345         0.14516129 5.702434e-17  1.65968834     9.279577e-16
  prop_express.OPC pvalue.OPC    logFC.OPC FDR_qvalue.OPC
1       0.03418803  0.2252179 0.0002677732      0.3704333
2       0.00000000         NA           NA             NA
> 
> genes.Psy = readRDS("../psychENCODE/deconvolution/DE_gene_anno.rds")
> dim(genes.Psy)
[1] 13376    30
> genes.Psy[1:2,]
      ensembl_gene_id  gene chromosome_name start_position end_position
ABCA7 ENSG00000064687 ABCA7              19        1040101      1065572
AAMDC ENSG00000087884 AAMDC              11       77821109     77918432
      prop_express prop_express.Astro pvalue.Astro logFC.Astro FDR_qvalue.Astro
ABCA7   0.06646934          0.0136003 8.492638e-15  -0.3131558     3.063768e-14
AAMDC   0.11095137          0.1008689 1.126819e-17   0.6820621     4.521483e-17
      prop_express.Exc   pvalue.Exc  logFC.Exc FDR_qvalue.Exc prop_express.Inh
ABCA7       0.09578372 4.860885e-20  0.2572804   1.807595e-19       0.05610236
AAMDC       0.13120647 3.581015e-19 -0.4148436   1.290400e-18       0.08464567
        pvalue.Inh   logFC.Inh FDR_qvalue.Inh prop_express.Micro pvalue.Micro
ABCA7 5.177762e-01  0.02495653   5.325306e-01        0.008695652    0.1614757
AAMDC 1.117051e-05 -0.06571287   2.188295e-05        0.017391304    0.1086062
      logFC.Micro FDR_qvalue.Micro prop_express.Oligo pvalue.Oligo logFC.Oligo
ABCA7  -0.2485103        0.1913046        0.008247423 8.413381e-17  -0.3373132
AAMDC  -0.4547845        0.1335680        0.070515464 2.789003e-21   0.5489058
      FDR_qvalue.Oligo prop_express.OPC   pvalue.OPC  logFC.OPC FDR_qvalue.OPC
ABCA7     2.174314e-16      0.007648184 4.165560e-09 -0.3554389   2.797507e-08
AAMDC     9.413591e-21      0.084130019 4.601513e-03  0.3781107   1.234244e-02
> 
> # cell types
> cts = gsub("logFC.", "", colnames(genes)[grep("logFC", colnames(genes))])
> cts
[1] "Astro" "Exc"   "Inh"   "Micro" "Oligo" "OPC"  
> 
> cts2 = gsub("logFC.", "", 
+             colnames(genes.Psy)[grep("logFC", colnames(genes.Psy))])
> cts2
[1] "Astro" "Exc"   "Inh"   "Micro" "Oligo" "OPC"  
> 
> # --------------------------------------------------------------
> # take intersections
> # --------------------------------------------------------------
> 
> g2use = intersect(genes$gene, genes.Psy$gene)
> 
> genes.MTG = genes[match(g2use, genes$gene),]
> genes.Psy = genes.Psy[match(g2use, genes.Psy$gene),]
> 
> dim(genes.MTG)
[1] 13058    30
> dim(genes.Psy)
[1] 13058    30
> 
> pdf("figure/compare_MTG_PsychENCODE.pdf", width=8, height=4)
> par(mfrow=c(1,2), bty="n")
> 
> for(ct1 in cts){
+   
+   cat(ct1, "\n")
+   
+   fdr.col   = paste0("FDR_qvalue.", ct1)
+   logfc.col = paste0("logFC.", ct1)
+   
+   sig.MTG = genes.MTG[[fdr.col]] < 0.001 & genes.MTG[[logfc.col]] > log(2)
+   sig.Psy = genes.Psy[[fdr.col]] < 0.001 & genes.Psy[[logfc.col]] > log(2)
+   
+   print(table(sig.MTG, sig.Psy))
+   
+   cat("\n")
+   
+   qval.MTG = genes.MTG[[fdr.col]]
+   qval.MTG[which(qval.MTG < 1e-10)] = 1e-10
+   
+   qval.Psy = genes.Psy[[fdr.col]]
+   qval.Psy[which(qval.Psy < 1e-10)] = 1e-10
+   
+   logfc.MTG = genes.MTG[[logfc.col]]
+   logfc.MTG = sign(logfc.MTG) * log10(abs(logfc.MTG))
+ 
+   logfc.Psy = genes.Psy[[logfc.col]]
+   logfc.Psy = sign(logfc.Psy) * log10(abs(logfc.Psy))
+   
+   smoothScatter(-log10(qval.MTG), -log10(qval.Psy), 
+                 xlab="MGT", ylab="PsychENCODE", 
+                 main=paste0(ct1, ": -log10(FDR)"))
+   
+   smoothScatter(logfc.MTG, logfc.Psy, xlab="MGT", ylab="PsychENCODE", 
+                 main="log10(log fold-change)")
+   
+ }
Astro 
       sig.Psy
sig.MTG FALSE  TRUE
  FALSE 10862   399
  TRUE    597   866

Exc 
       sig.Psy
sig.MTG FALSE  TRUE
  FALSE 11642   327
  TRUE    564   525

Inh 
       sig.Psy
sig.MTG FALSE  TRUE
  FALSE 11783   228
  TRUE    605   439

Micro 
       sig.Psy
sig.MTG FALSE TRUE
  FALSE  8071  281
  TRUE    262  293

Oligo 
       sig.Psy
sig.MTG FALSE  TRUE
  FALSE 11322   149
  TRUE    579   680

OPC 
       sig.Psy
sig.MTG FALSE  TRUE
  FALSE 11479   386
  TRUE    335   456

> 
> dev.off()
null device 
          1 
> 
> # --------------------------------------------------------------
> # add an indicator for differentially expressed genes
> # --------------------------------------------------------------
> 
> for(ct1 in cts){
+   
+   cname     = paste0("selected.", ct1)
+   fdr.col   = paste0("FDR_qvalue.", ct1)
+   logfc.col = paste0("logFC.", ct1)
+   
+   wwi = which(genes[[fdr.col]] < 0.001 & genes[[logfc.col]] > log(2))
+   
+   genes[[cname]] = rep(0, nrow=(genes))
+   genes[[cname]][wwi] = 1
+ }
> 
> genes[["n.cellTypes"]] = rowSums(genes[,31:36])
> table(genes$n.cellTypes)

    0     1     2     3     4     5 
31220  5127  1068   213    27     2 
> colSums(genes[which(genes$n.cellTypes==1),31:36])
selected.Astro   selected.Exc   selected.Inh selected.Micro selected.Oligo 
          1223            924            968            679            926 
  selected.OPC 
           407 
> 
> # --------------------------------------------------------------
> # plot the relation between prop. of cells expressed vs. 
> # number of cell tyeps it is classified as cell type-specific
> # --------------------------------------------------------------
> 
> library(ggplot2)
> p <- ggplot(genes, aes(x=as.factor(n.cellTypes), y=prop_express)) + 
+   geom_boxplot()
> ggsave("figure/MTG_boxplot_prop_express_vs_n_cell_types.pdf", device="pdf", 
+        width=4, height=3, units="in")
> 
> tapply(genes$prop_express, genes$n.cellTypes, quantile, 
+        probs=c(0.05, 0.1, 0.2,  0.5, 0.8, 0.9, 0.95))
$`0`
         5%         10%         20%         50%         80%         90% 
0.002454622 0.003229766 0.005555197 0.026290291 0.177895485 0.357347717 
        95% 
0.503972612 

$`1`
        5%        10%        20%        50%        80%        90%        95% 
0.01195013 0.02247917 0.05285188 0.25521607 0.55845230 0.70137588 0.79936697 

$`2`
        5%        10%        20%        50%        80%        90%        95% 
0.06599703 0.09509076 0.16504102 0.38550481 0.65761902 0.76901363 0.84509399 

$`3`
       5%       10%       20%       50%       80%       90%       95% 
0.1100962 0.1445126 0.2102319 0.4004263 0.6787546 0.7630644 0.8243912 

$`4`
       5%       10%       20%       50%       80%       90%       95% 
0.2854790 0.3044506 0.3318132 0.5474453 0.7300433 0.7576772 0.8541761 

$`5`
       5%       10%       20%       50%       80%       90%       95% 
0.1694593 0.2055940 0.2778632 0.4946709 0.7114786 0.7837478 0.8198824 

> 
> table(genes$prop_express > 0.01, genes$n.cellTypes)
       
            0     1     2     3     4     5
  FALSE  9663   213     0     0     0     0
  TRUE  21557  4914  1068   213    27     2
> 
> # --------------------------------------------------------------
> # write out cell type-specifically expressed genes
> # --------------------------------------------------------------
> 
> col2use = c(1:6, 31:36)
> 
> ww1 = which(genes$prop_express > 0.01 & genes$n.cellTypes==1)
> ww2 = which(genes$prop_express > 0.01 & genes$n.cellTypes==0)
> genes.ct = genes[ww1,col2use]
> genes.control = genes[ww2,col2use]
> 
> dim(genes.ct)
[1] 4914   12
> genes.ct[1:2,]
   gene entrez_id chromosome start_position end_position prop_express
2  A1BG         1         19       58346806     58353499    0.1543828
7 A2ML1    144568         12        8822554      8886918    0.1051612
  selected.Astro selected.Exc selected.Inh selected.Micro selected.Oligo
2              0            0            0              0              1
7              1            0            0              0              0
  selected.OPC
2            0
7            0
> 
> dim(genes.control)
[1] 21557    12
> genes.control[1:2,]
      gene entrez_id chromosome start_position end_position prop_express
1  5-HT3C2    389180          3      184076646    184084331   0.04121181
3 A1BG-AS1    503538         19       58351970     58355183   0.03442930
  selected.Astro selected.Exc selected.Inh selected.Micro selected.Oligo
1              0            0            0              0              0
3              0            0            0              0              0
  selected.OPC
1            0
3            0
> 
> write.table(genes.ct, file="genes_ct_specific_expression.txt", 
+             quote = FALSE, sep = "\t", row.names = FALSE,
+             col.names = TRUE)
> 
> write.table(genes.control, file="genes_control.txt", 
+             quote = FALSE, sep = "\t", row.names = FALSE,
+             col.names = TRUE)
> 
> # --------------------------------------------------------------
> # compare with the cell type-specific genes reported by the 
> # psychENCODE project, which has 25 cell types
> # --------------------------------------------------------------
> 
> marker.psy = "DER-21_Single_cell_markergenes_UMI.txt"
> markers = read.table(paste0("../psychENCODE/deconvolution/", marker.psy), 
+                      sep="\t", as.is=TRUE, header=TRUE)
> dim(markers)
[1] 5373    2
> markers[1:2,]
   Gene Cluster
1 CBLN2     Ex1
2  ENC1     Ex1
> length(unique(markers$Cluster))
[1] 25
> table(markers$Cluster)

    Astro      Endo       Ex1       Ex2      Ex3e       Ex4      Ex5b      Ex6a 
      159        83       305       219       372       293       240       233 
     Ex6b       Ex8       Ex9      In1a      In1b      In1c       In3      In4a 
      218       299       200       257       240       194       195       215 
     In4b      In6a      In6b       In7       In8 Microglia     Oligo       OPC 
      289       219       231       232       197        97       179       143 
      Per 
       64 
> 
> length(unique(markers$Gene))
[1] 1852
> tb1 = table(table(markers$Gene))
> tb2 = tb1[1:9]
> tb2[9] = sum(tb1[9:length(tb1)])
> tb2

  1   2   3   4   5   6   7   8   9 
808 271 208 154 109 115  74  51  62 
> 
> # --------------------------------------------------------------
> # for each gene, check its associaated clusters (cell types)
> # similar cell types are often associated
> # --------------------------------------------------------------
> 
> cluster.group = tapply(markers$Cluster, markers$Gene, paste, collapse=":")
> length(cluster.group)
[1] 1852
> cluster.group[1:2]
      43160       43350 
"Oligo:OPC"     "Oligo" 
> 
> tbc = table(cluster.group)
> tbc = tbc[grep(":", names(tbc))]
> sort(tbc, decreasing=T)[1:20]
cluster.group
                 Ex3e:Ex9              Ex3e:Ex4:Ex9                  Endo:Per 
                       22                        16                        13 
                 Ex3e:Ex8                 Oligo:OPC                  Ex3e:Ex4 
                       10                         9                         8 
                 Ex1:Ex3e                   Ex1:Ex8                 In4a:In4b 
                        7                         7                         7 
                In6a:In6b           Oligo:Microglia               Astro:Oligo 
                        7                         7                         6 
         Ex1:Ex3e:Ex4:Ex9                 Ex6a:Ex6b                   In7:In8 
                        6                         6                         6 
                Per:Astro                 Astro:OPC Ex1:Ex2:Ex4:Ex5b:Ex6b:Ex8 
                        6                         5                         5 
             Ex1:Ex3e:Ex4             Ex3e:Ex4:Ex5b 
                        5                         5 
> 
> # --------------------------------------------------------------
> # for each cluster/cell type, check the overlap between 
> # our marker genes and PsychENCODE marker genes
> # --------------------------------------------------------------
> 
> table(genes.ct$gene %in% markers$Gene)

FALSE  TRUE 
 4014   900 
> table(markers$Gene %in% genes.ct$gene)

FALSE  TRUE 
 2537  2836 
> tb3 = table(markers$Gene %in% genes.ct$gene, markers$Cluster)
> tb3
       
        Astro Endo Ex1 Ex2 Ex3e Ex4 Ex5b Ex6a Ex6b Ex8 Ex9 In1a In1b In1c In3
  FALSE    99   63 128 110  182 134  110  123  114 143 113  103   92   83  78
  TRUE     60   20 177 109  190 159  130  110  104 156  87  154  148  111 117
       
        In4a In4b In6a In6b In7 In8 Microglia Oligo OPC Per
  FALSE   70  123  100  101  94  72        62   104  95  41
  TRUE   145  166  119  130 138 125        35    75  48  23
> 
> pdf("figure/DER-21_Single_cell_markergenes.pdf", width=6, height=4)
> par(las=2, cex=0.8)
> barplot(tb3)
> legend("topright", c("overlap", "no overlap"), 
+        fill = c(gray(0.9), gray(0.2)))
> dev.off()
pdf 
  2 
> 
> sessionInfo()
R version 3.5.0 (2018-04-23)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS  10.14.3

Matrix products: default
BLAS: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] ggplot2_3.0.0

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.18       withr_2.1.2        crayon_1.3.4       dplyr_0.7.6       
 [5] assertthat_0.2.0   grid_3.5.0         plyr_1.8.4         R6_2.2.2          
 [9] gtable_0.2.0       magrittr_1.5       scales_1.0.0       KernSmooth_2.23-15
[13] pillar_1.3.0       rlang_0.2.1        lazyeval_0.2.1     bindrcpp_0.2.2    
[17] labeling_0.3       glue_1.3.0         purrr_0.2.5        munsell_0.5.0     
[21] compiler_3.5.0     pkgconfig_2.0.1    colorspace_1.3-2   tidyselect_0.2.4  
[25] bindr_0.1.1        tibble_1.4.2      
> q(save="no")
> proc.time()
   user  system elapsed 
  1.933   0.185   2.204 
